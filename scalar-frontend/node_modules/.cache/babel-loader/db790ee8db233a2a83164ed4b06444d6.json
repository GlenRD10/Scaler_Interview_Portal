{"ast":null,"code":"var _jsxFileName = \"/home/battle8ee/Downloads/scalar-frontend/src/components/Form/CreateInterview.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport DesktopDatePicker from '@mui/lab/DesktopDatePicker';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport TimePicker from '@mui/lab/TimePicker';\nimport Multiselect from 'multiselect-react-dropdown';\nimport moment from 'moment';\nimport { useState, useEffect } from \"react\";\nimport classes from './CreateInterview.module.css';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateInterview = () => {\n  _s();\n\n  const [date, setDate] = useState(new Date(moment().toDate()));\n  const [startTime, setStartTime] = useState(new Date(moment().toDate()));\n  const [endTime, setEndTime] = useState(new Date(moment().toDate()));\n  const [selectedInterviewers, setSelectedInterviewers] = useState([]);\n  const [selectedParticipants, setSelectedParticipants] = useState([]);\n  const [interviewerList, setInterviewerList] = useState([]);\n  const [participantList, setParticpantList] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/v1/interviewers\").then(response => response.json()).then(data => {\n      setInterviewerList(data.interviewer);\n      setLoading(false);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/v1/participants\").then(response => response.json()).then(data => {\n      setParticpantList(data.participant);\n      setLoading(false);\n    });\n  }, []);\n\n  const handleDateChange = newValue => {\n    setDate(newValue);\n  };\n\n  const handleStartTimeChange = newValue => {\n    setStartTime(newValue);\n  };\n\n  const handleEndTimeChange = newValue => {\n    setEndTime(newValue);\n  };\n\n  const interviewerSelect = selectedItem => {\n    delete selectedItem.interviews; // selectedInterviewers.push(selectedItem);\n\n    console.log(selectedItem);\n    console.log(selectedInterviewers);\n  };\n\n  const interviewerRemove = selectedItem => {\n    selectedInterviewers.remove(selectedItem);\n    console.log(selectedInterviewers);\n  };\n\n  const participantSelect = (selectedList, selectedItem) => {\n    delete selectedItem.interviews;\n    selectedParticipants.push(selectedItem);\n    console.log(selectedParticipants);\n  };\n\n  const participantRemove = (selectedList, selectedItem) => {};\n\n  const onFormSubmit = e => {\n    e.preventDefault();\n    console.log(date);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.container,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.heading,\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Schedule an Interview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this), !loading && /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: onFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(LocalizationProvider, {\n        dateAdapter: AdapterDateFns,\n        children: /*#__PURE__*/_jsxDEV(Stack, {\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(DesktopDatePicker, {\n            label: \"Select Date\",\n            inputFormat: \"MM/dd/yyyy\",\n            minDate: moment().toDate(),\n            value: date,\n            onChange: handleDateChange,\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TimePicker, {\n            label: \"Start Time\",\n            value: startTime,\n            minDate: moment().toDate(),\n            onChange: handleStartTimeChange,\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(TimePicker, {\n            label: \"End Time\",\n            value: endTime,\n            minDate: moment().toDate(),\n            onChange: handleEndTimeChange,\n            renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 54\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.dropdown,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Choose Interviewers\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n          options: interviewerList,\n          displayValue: \"name\",\n          onSelect: interviewerSelect,\n          onRemove: interviewerRemove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Choose Participants\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Multiselect, {\n          options: participantList,\n          displayValue: \"name\",\n          onSelect: participantSelect,\n          onRemove: participantRemove\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.button,\n        type: \"submit\",\n        children: \"Create Interview\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n\n_s(CreateInterview, \"xtJtr3/2GMIXIh8C4Z6RzyHQN+Q=\");\n\n_c = CreateInterview;\nexport default CreateInterview;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateInterview\");","map":{"version":3,"sources":["/home/battle8ee/Downloads/scalar-frontend/src/components/Form/CreateInterview.js"],"names":["React","DesktopDatePicker","Stack","TextField","AdapterDateFns","LocalizationProvider","TimePicker","Multiselect","moment","useState","useEffect","classes","CreateInterview","date","setDate","Date","toDate","startTime","setStartTime","endTime","setEndTime","selectedInterviewers","setSelectedInterviewers","selectedParticipants","setSelectedParticipants","interviewerList","setInterviewerList","participantList","setParticpantList","loading","setLoading","fetch","then","response","json","data","interviewer","participant","handleDateChange","newValue","handleStartTimeChange","handleEndTimeChange","interviewerSelect","selectedItem","interviews","console","log","interviewerRemove","remove","participantSelect","selectedList","push","participantRemove","onFormSubmit","e","preventDefault","container","heading","params","dropdown","button"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport DesktopDatePicker from '@mui/lab/DesktopDatePicker';\nimport Stack from '@mui/material/Stack';\nimport TextField from '@mui/material/TextField';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport TimePicker from '@mui/lab/TimePicker';\n\nimport Multiselect from 'multiselect-react-dropdown';\nimport moment from 'moment'\nimport { useState, useEffect } from \"react\";\n\nimport classes from './CreateInterview.module.css';\nimport 'react-datepicker/dist/react-datepicker.css';\n\n\nconst CreateInterview = () => {\n    const [date, setDate] = useState(new Date(moment().toDate()));\n    const [startTime, setStartTime] = useState(new Date(moment().toDate()));\n    const [endTime, setEndTime] = useState(new Date(moment().toDate()));\n    const [selectedInterviewers, setSelectedInterviewers] = useState([]);\n    const [selectedParticipants, setSelectedParticipants] = useState([]);\n\n    const [interviewerList, setInterviewerList] = useState([])\n    const [participantList, setParticpantList] = useState([])\n    const [loading, setLoading] = useState(true)\n\n    useEffect(() => {\n        fetch(\"http://localhost:5000/api/v1/interviewers\")\n        .then(response => response.json())\n        .then(data => {\n            setInterviewerList(data.interviewer)\n            setLoading(false)\n        })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    useEffect(() => {\n        fetch(\"http://localhost:5000/api/v1/participants\")\n        .then(response => response.json())\n        .then(data => {\n            setParticpantList(data.participant)\n            setLoading(false)\n        })\n    }, [])\n\n    const handleDateChange = (newValue) => {\n        setDate(newValue);\n    };\n\n    const handleStartTimeChange = (newValue) => {\n        setStartTime(newValue);\n    };\n\n    const handleEndTimeChange = (newValue) => {\n        setEndTime(newValue);\n    };\n\n    const interviewerSelect = (selectedItem) => {\n        delete selectedItem.interviews;\n        // selectedInterviewers.push(selectedItem);\n        console.log(selectedItem);\n        console.log(selectedInterviewers)\n    }\n    \n    const interviewerRemove = (selectedItem) => {\n        selectedInterviewers.remove(selectedItem)\n        console.log(selectedInterviewers)\n    }\n\n    const participantSelect = (selectedList, selectedItem) => {\n        delete selectedItem.interviews;\n        selectedParticipants.push(selectedItem);\n        console.log(selectedParticipants)\n    }\n\n    const participantRemove = (selectedList, selectedItem) => {\n        \n    }\n\n    const onFormSubmit = (e) => {\n        e.preventDefault();\n        console.log(date)\n    };\n\n    return (\n        <div className={classes.container}>\n            <div className={classes.heading}>\n                <h2>Schedule an Interview</h2>\n            </div>\n            {!loading && <form onSubmit={ onFormSubmit }>\n                <LocalizationProvider dateAdapter={AdapterDateFns}>\n                    <Stack spacing={3}>\n                        <DesktopDatePicker\n                            label=\"Select Date\"\n                            inputFormat=\"MM/dd/yyyy\"\n                            minDate={moment().toDate()}\n                            value={date}\n                            onChange={handleDateChange}\n                            renderInput={(params) => <TextField {...params} />}\n                        />\n                        <TimePicker\n                            label=\"Start Time\"\n                            value={startTime}\n                            minDate={moment().toDate()}\n                            onChange={handleStartTimeChange}\n                            renderInput={(params) => <TextField {...params} />}\n                        />\n                        <TimePicker\n                            label=\"End Time\"\n                            value={endTime}\n                            minDate={moment().toDate()}\n                            onChange={handleEndTimeChange}\n                            renderInput={(params) => <TextField {...params} />}\n                        />\n                    </Stack>\n                </LocalizationProvider>\n                <div className={classes.dropdown}>\n                    <h4>Choose Interviewers</h4>\n                    <Multiselect\n                        options={interviewerList}\n                        displayValue=\"name\"\n                        onSelect={interviewerSelect}\n                        onRemove={interviewerRemove}\n                    />\n                    <br />\n                    <h4>Choose Participants</h4>\n                    <Multiselect\n                        options={participantList}\n                        displayValue=\"name\"\n                        onSelect={participantSelect}\n                        onRemove={participantRemove}\n                    />\n                </div>\n                <button className={classes.button} type=\"submit\">Create Interview</button>\n            </form>}\n        </div>\n    );\n};\n\nexport default CreateInterview;"]},"metadata":{},"sourceType":"module"}