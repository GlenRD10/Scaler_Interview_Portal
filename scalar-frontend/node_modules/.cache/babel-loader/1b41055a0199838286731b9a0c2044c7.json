{"ast":null,"code":"var _jsxFileName = \"/home/battle8ee/Downloads/scalar-frontend/src/components/UI/InterviewListCard.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from \"react\";\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport moment from 'moment';\nimport classes from './InterviewListCard.module.css';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InterviewListCard = props => {\n  _s();\n\n  const [date, setDate] = useState('');\n  const [startTime, setStartTime] = useState('');\n  const [endTime, setEndTime] = useState('');\n  useEffect(() => {\n    let tempDate = moment(props.interviewList.date).format(\"dddd, MMMM Do YYYY\");\n    setDate(tempDate);\n    tempDate = moment(props.interviewList.startTime).format(\"h:mm a\");\n    setStartTime(tempDate);\n    tempDate = moment(props.interviewList.endTime).format(\"h:mm a\");\n    setEndTime(tempDate); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const navigate = useNavigate();\n\n  const editButtonHandler = e => {\n    e.preventDefault();\n    navigate('/createInterview', {\n      state: {\n        data: props.interviewList,\n        edit: true\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.card,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        minWidth: 275\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            fontSize: 14\n          },\n          color: \"text.secondary\",\n          gutterBottom: true,\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          children: startTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          component: \"div\",\n          children: endTime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Interviewer(s): \", props.interviewList.interviewers.map(value => {\n            return /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [value.name, \" | \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 95\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: [\"Participants(s): \", props.interviewList.participants.map(value => {\n            return /*#__PURE__*/_jsxDEV(\"b\", {\n              children: [value.name, \" | \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 96\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          onClick: editButtonHandler,\n          children: \"Edit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_s(InterviewListCard, \"eRC3UOK83vcoexGpg8P2ymWuVYE=\", false, function () {\n  return [useNavigate];\n});\n\n_c = InterviewListCard;\nexport default InterviewListCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"InterviewListCard\");","map":{"version":3,"sources":["/home/battle8ee/Downloads/scalar-frontend/src/components/UI/InterviewListCard.js"],"names":["React","useState","useEffect","Card","CardActions","CardContent","Button","Typography","moment","classes","useNavigate","InterviewListCard","props","date","setDate","startTime","setStartTime","endTime","setEndTime","tempDate","interviewList","format","navigate","editButtonHandler","e","preventDefault","state","data","edit","card","minWidth","fontSize","interviewers","map","value","name","participants"],"mappings":"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","sourcesContent":["import {React, useState, useEffect } from \"react\";\n\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport moment from 'moment';\n\nimport classes from './InterviewListCard.module.css';\nimport { useNavigate } from 'react-router-dom';\n\nconst InterviewListCard = (props) => {\n    const [date, setDate] = useState('');\n    const [startTime, setStartTime] = useState('');\n    const [endTime, setEndTime] = useState('')\n\n    useEffect(() => {\n        let tempDate = moment(props.interviewList.date).format(\"dddd, MMMM Do YYYY\");\n        setDate(tempDate);\n        tempDate = moment(props.interviewList.startTime).format(\"h:mm a\");\n        setStartTime(tempDate);\n        tempDate = moment(props.interviewList.endTime).format(\"h:mm a\");\n        setEndTime(tempDate);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const navigate = useNavigate();\n\n    const editButtonHandler = (e) => {\n        e.preventDefault();\n        navigate('/createInterview', { state: { data: props.interviewList, edit: true} });\n    }\n\n    return (\n        <div className={classes.card}>\n            <Card sx={{ minWidth: 275 }}>\n                <CardContent>\n                    <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n                    {date}\n                    </Typography>\n                    <Typography variant=\"h6\" component=\"div\">\n                    {startTime}\n                    </Typography>\n                    <Typography variant=\"h6\" component=\"div\">\n                    {endTime}\n                    </Typography>\n                    <Typography variant=\"body2\">\n                    Interviewer(s): {props.interviewList.interviewers.map((value) => { return <b>{value.name} | </b>})}\n                    </Typography>\n                    <Typography variant=\"body2\">\n                    Participants(s): {props.interviewList.participants.map((value) => { return <b>{value.name} | </b>})}\n                    </Typography>\n                </CardContent>\n                <CardActions>\n                    <Button size=\"small\" onClick={editButtonHandler}>Edit</Button>\n                </CardActions>\n            </Card>\n        </div>\n    );\n};\n\nexport default InterviewListCard"]},"metadata":{},"sourceType":"module"}